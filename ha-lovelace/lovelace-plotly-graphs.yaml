type: vertical-stack
cards:
  - type: custom:button-card
    name: Pack 0
    color_type: card
    styles:
      card:
        - color: black
        - height: 40px
        - background-color: |
            [[[
              const sensors = [
                'sensor.seplos_bms_pack_0_component_temperature_warning',
                'sensor.seplos_bms_pack_0_ambient_temperature_warning',
                'sensor.seplos_bms_pack_0_dis_charging_current_warning',
                'sensor.seplos_bms_pack_0_pack_voltage_warning',
                'sensor.seplos_bms_pack_0_voltage_sensing_failure',
                'sensor.seplos_bms_pack_0_temp_sensing_failure',
                'sensor.seplos_bms_pack_0_current_sensing_failure',
                'sensor.seplos_bms_pack_0_power_switch_failure',
                'sensor.seplos_bms_pack_0_cell_voltage_difference_sensing_failure',
                'sensor.seplos_bms_pack_0_charging_switch_failure',
                'sensor.seplos_bms_pack_0_discharging_switch_failure',
                'sensor.seplos_bms_pack_0_current_limit_switch_failure',
                'sensor.seplos_bms_pack_0_current_limit_switch_failure',
                'sensor.seplos_bms_pack_0_cell_overvoltage',
                'sensor.seplos_bms_pack_0_cell_voltage_low',
                'sensor.seplos_bms_pack_0_pack_overvoltage',
                'sensor.seplos_bms_pack_0_pack_voltage_low',
                'sensor.seplos_bms_pack_0_charging_temp_high',
                'sensor.seplos_bms_pack_0_charging_temp_low',
                'sensor.seplos_bms_pack_0_discharging_temp_high',
                'sensor.seplos_bms_pack_0_discharging_temp_low',
                'sensor.seplos_bms_pack_0_ambient_temp_high',
                'sensor.seplos_bms_pack_0_component_temp_high',
                'sensor.seplos_bms_pack_0_charging_overcurrent',
                'sensor.seplos_bms_pack_0_discharging_overcurrent',
                'sensor.seplos_bms_pack_0_transient_overcurrent',
                'sensor.seplos_bms_pack_0_output_short_circuit',
                'sensor.seplos_bms_pack_0_transient_overcurrent_lock',
                'sensor.seplos_bms_pack_0_charging_high_voltage',
                'sensor.seplos_bms_pack_0_intermittent_power_supplement',
                'sensor.seplos_bms_pack_0_soc_low',
                'sensor.seplos_bms_pack_0_cell_low_voltage_forbidden_charging',
                'sensor.seplos_bms_pack_0_output_reverse_protection',
                'sensor.seplos_bms_pack_0_output_connection_failure',
                'sensor.seplos_bms_pack_0_eep_storage_failure',
                'sensor.seplos_bms_pack_0_rtc_clock_failure',
                'sensor.seplos_bms_pack_0_no_calibration_of_voltage',
                'sensor.seplos_bms_pack_0_no_calibration_of_current',
                'sensor.seplos_bms_pack_0_no_calibration_of_null_point'
              ];
              if (sensors.some(sensor => states[sensor].state != "normal")) return "orange";
              for (let i = 1; i <= 16; i++) {
                if (i <= 4 && states[`sensor.seplos_bms_pack_0_cell_temperature_warning_${i}`].state != "normal") return "orange";
                else if (states[`sensor.seplos_bms_pack_0_voltage_warning_cell_${i}`].state != "normal") return "orange";
                else if (states[`sensor.seplos_bms_pack_0_disconnection_cell_${i}`].state != "normal") return "orange";
              }
              return "lightgreen";
            ]]]
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        name: Pack Voltage
        size: 15%
        entity: sensor.seplos_bms_pack_0_total_pack_voltage
        show_icon: true
        show_name: true
        show_state: true
        show_label: true
        styles:
          icon:
            - color: |
                [[[
                  const totalPackVol = entity.state;
                  const minPackVol = states['sensor.seplos_bms_pack_0_min_pack_voltage'].state;
                  const maxPackVol = states['sensor.seplos_bms_pack_0_max_pack_voltage'].state;
                  if (totalPackVol < minPackVol + 8) return 'red';
                  else if (totalPackVol > maxPackVol - 3.2) return 'red';
                  else if (totalPackVol < minPackVol + 10.4) return 'orange';
                  else if (totalPackVol > maxPackVol - 4.6) return 'orange';
                  else return 'lightgreen';
                ]]]
          card:
            - font-size: 12px
      - type: custom:button-card
        name: Port Voltage
        size: 15%
        entity: sensor.seplos_bms_pack_0_port_voltage
        show_icon: true
        show_name: true
        show_state: true
        show_label: true
        styles:
          icon:
            - color: |
                [[[
                  const portVol = entity.state;
                  const minPackVol = states['sensor.seplos_bms_pack_0_min_pack_voltage'].state;
                  const maxPackVol = states['sensor.seplos_bms_pack_0_max_pack_voltage'].state;
                  if (portVol < minPackVol + 8) return 'red';
                  else if (portVol > maxPackVol - 3.2) return 'red';
                  else if (portVol < minPackVol + 10.4) return 'orange';
                  else if (portVol > maxPackVol - 4.6) return 'orange';
                  else return 'lightgreen';
                ]]]
          card:
            - font-size: 12px
      - type: custom:button-card
        name: Dis-/Charging
        size: 15%
        entity: sensor.seplos_bms_pack_0_dis_charge_power
        show_icon: true
        show_name: true
        show_state: false
        show_label: true
        label: |
          [[[
            const disChargePower = entity.state;
            if (states['sensor.seplos_bms_pack_0_standby'].state == "on") return "Standby"
            else if (states['sensor.seplos_bms_pack_0_power_off'].state == "on") return "Off"
            else if (states['sensor.seplos_bms_pack_0_charge'].state == "on") return `Charging: ${disChargePower} W`
            else if (states['sensor.seplos_bms_pack_0_floating_charge'].state == "on") return `Floating: ${disChargePower} W`
            else if (states['sensor.seplos_bms_pack_0_discharge'].state == "on") return `Discharging: ${disChargePower} W`
            else return "Active Warnings"
          ]]]
        icon: |
          [[[
            if (states['sensor.seplos_bms_pack_0_standby'].state == "on") return "mdi:battery-off-outline"
            else if (states['sensor.seplos_bms_pack_0_power_off'].state == "on") return "mdi:battery-off-outline"
            else if (states['sensor.seplos_bms_pack_0_charge'].state == "on") return "mdi:battery-arrow-up-outline"
            else if (states['sensor.seplos_bms_pack_0_floating_charge'].state == "on") return "mdi:battery-arrow-up-outline"
            else if (states['sensor.seplos_bms_pack_0_discharge'].state == "on") return "mdi:battery-arrow-down-outline"
            else return "mdi:alert"
          ]]]
        styles:
          icon:
            - color: |
                [[[
                  if (states['sensor.seplos_bms_pack_0_standby'].state == "on") return "grey"
                  else if (states['sensor.seplos_bms_pack_0_power_off'].state == "on") return "grey"
                  else if (states['sensor.seplos_bms_pack_0_charge'].state == "on") return "lightgreen"
                  else if (states['sensor.seplos_bms_pack_0_floating_charge'].state == "on") return "lightgreen"
                  else if (states['sensor.seplos_bms_pack_0_discharge'].state == "on") return "lightgreen"
                  else return "red"
                ]]]
          card:
            - font-size: 12px
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        name: State of Charge
        size: 15%
        entity: sensor.seplos_bms_pack_0_state_of_charge
        show_icon: true
        show_name: true
        show_state: true
        show_label: true
        icon: |
          [[[
            const soc = entity.state;
            if (soc > 10) return `mdi:battery-${Math.floor(soc / 10) * 10}`;
            else return "mdi:battery-alert-variant-outline";
          ]]]
        styles:
          icon:
            - color: |
                [[[
                  const soc = entity.state;
                  if (soc > 30 ) return 'lightgreen';
                  else if (soc > 15 ) return 'yellow';
                  else return 'red';
                ]]]
          card:
            - font-size: 12px
      - type: custom:button-card
        name: State of Health
        size: 15%
        entity: sensor.seplos_bms_pack_0_state_of_health
        show_icon: true
        show_name: true
        show_state: true
        show_label: true
        styles:
          icon:
            - color: |
                [[[
                  const soh = entity.state;
                  if (soh > 99) return 'lightgreen';
                  else if (soh > 95) return 'orange';
                  else return 'red';
                ]]]
          card:
            - font-size: 12px
      - type: custom:button-card
        name: Charging Cycles
        size: 15%
        entity: sensor.seplos_bms_pack_0_charging_cycles
        show_icon: true
        show_name: true
        show_state: true
        show_label: true
        styles:
          icon:
            - color: |
                [[[
                  const cycles = entity.state;
                  if (cycles > 5000) return 'red';
                  else if (cycles > 3000) return 'orange';
                  else return 'lightgreen';
                ]]]
          card:
            - font-size: 12px
  - type: custom:bar-card
    direction: up
    columns: 8
    decimal: 3
    max: 3.65
    min: 2.5
    height: 80px
    severity:
      - color: red
        from: 3.45
        to: 3.65
      - color: orange
        from: 3.363
        to: 3.45
      - color: lightgreen
        from: 3.2
        to: 3.363
      - color: orange
        from: 3.15
        to: 3.2
      - color: red
        from: 2.5
        to: 3.15
    positions:
      icon: 'off'
      indicator: inside
      name: outside
    card_mod:
      style: |-
        bar-card-value {
          margin-right: auto;
          margin-left: auto;
          margin-bottom: 35px;
          font-size: 10px;
          font-weight: normal;
          line-height: 10px;
          color: black;
          background-color: white; 
        }
        bar-card-name {
          margin-right: auto;
          margin-left: auto;
          margin-bottom: 0px;
          font-size: 10px;
          font-weight: normal;
        }
    entities:
      - entity: sensor.seplos_bms_pack_0_voltage_cell_1
        name: Cell 1
      - entity: sensor.seplos_bms_pack_0_voltage_cell_2
        name: Cell 2
      - entity: sensor.seplos_bms_pack_0_voltage_cell_3
        name: Cell 3
      - entity: sensor.seplos_bms_pack_0_voltage_cell_4
        name: Cell 4
      - entity: sensor.seplos_bms_pack_0_voltage_cell_5
        name: Cell 5
      - entity: sensor.seplos_bms_pack_0_voltage_cell_6
        name: Cell 6
      - entity: sensor.seplos_bms_pack_0_voltage_cell_7
        name: Cell 7
      - entity: sensor.seplos_bms_pack_0_voltage_cell_8
        name: Cell 8
      - entity: sensor.seplos_bms_pack_0_voltage_cell_9
        name: Cell 9
      - entity: sensor.seplos_bms_pack_0_voltage_cell_10
        name: Cell 10
      - entity: sensor.seplos_bms_pack_0_voltage_cell_11
        name: Cell 11
      - entity: sensor.seplos_bms_pack_0_voltage_cell_12
        name: Cell 12
      - entity: sensor.seplos_bms_pack_0_voltage_cell_13
        name: Cell 13
      - entity: sensor.seplos_bms_pack_0_voltage_cell_14
        name: Cell 14
      - entity: sensor.seplos_bms_pack_0_voltage_cell_15
        name: Cell 15
      - entity: sensor.seplos_bms_pack_0_voltage_cell_16
        name: Cell 16
  - type: custom:button-card
    name: |
      [[[
        const activeBalancingCells = Array.from({length: 16}, (_, i) => i + 1)
          .filter(i => states[`sensor.seplos_bms_pack_0_equalization_cell_${i}`].state !== "off");
        return activeBalancingCells.length > 0
          ? `Passive Balancer active for Cells ${activeBalancingCells.join(', ')}`
          : "Passive Balancer inactive";
      ]]]
    styles:
      card:
        - font-size: 12px
        - height: 40px
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        name: Cell Voltage Delta
        size: 15%
        entity: sensor.seplos_bms_pack_0_delta_cell_voltage
        show_icon: true
        show_name: true
        show_state: true
        styles:
          icon:
            - color: |
                [[[
                  const cellDeltaVol = entity.state;
                  if (cellDeltaVol < 0.010) return 'lightgreen';
                  if (cellDeltaVol < 0.030) return 'orange';
                  else return 'red';
                ]]]
          card:
            - font-size: 12px
      - type: custom:button-card
        name: >
          [[[
            const highestCell = states['sensor.seplos_bms_pack_0_highest_cell'].state;
            return `Highest Cell: ${highestCell}`
          ]]]
        size: 15%
        entity: sensor.seplos_bms_pack_0_highest_cell_voltage
        show_icon: true
        show_name: true
        show_state: true
        styles:
          icon:
            - color: |
                [[[
                  const cellVol = entity.state;
                  const minCellVol = states['sensor.seplos_bms_pack_0_min_cell_voltage'].state;
                  const maxCellVol = states['sensor.seplos_bms_pack_0_max_cell_voltage'].state;
                  if (cellVol < minCellVol + 0.5) return 'red';
                  else if (cellVol > maxCellVol - 0.2) return 'red';
                  else if (cellVol < minCellVol + 0.65) return 'orange';
                  else if (cellVol > maxCellVol - 0.3) return 'orange';
                  else return 'lightgreen';
                ]]]
          card:
            - font-size: 12px
      - type: custom:button-card
        name: >
          [[[
            const lowestCell = states['sensor.seplos_bms_pack_0_lowest_cell'].state;
            return `Lowest Cell: ${lowestCell}`
          ]]]
        size: 15%
        entity: sensor.seplos_bms_pack_0_lowest_cell_voltage
        show_icon: true
        show_name: true
        show_state: true
        styles:
          icon:
            - color: |
                [[[
                  const cellVol = entity.state;
                  const minCellVol = states['sensor.seplos_bms_pack_0_min_cell_voltage'].state;
                  const maxCellVol = states['sensor.seplos_bms_pack_0_max_cell_voltage'].state;
                  if (cellVol < minCellVol + 0.5) return 'red';
                  else if (cellVol > maxCellVol - 0.2) return 'red';
                  else if (cellVol < minCellVol + 0.65) return 'orange';
                  else if (cellVol > maxCellVol - 0.3) return 'orange';
                  else return 'lightgreen';
                ]]]
          card:
            - font-size: 12px
  - type: horizontal-stack
    cards:
      - type: custom:button-card
        name: Average Cell Voltage
        size: 15%
        entity: sensor.seplos_bms_pack_0_average_cell_voltage
        show_icon: true
        show_name: true
        show_state: true
        show_label: false
        styles:
          icon:
            - color: |
                [[[
                  const cellVol = entity.state;
                  const minCellVol = states['sensor.seplos_bms_pack_0_min_cell_voltage'].state;
                  const maxCellVol = states['sensor.seplos_bms_pack_0_max_cell_voltage'].state;
                  if (cellVol < minCellVol + 0.5) return 'red';
                  else if (cellVol > maxCellVol - 0.2) return 'red';
                  else if (cellVol < minCellVol + 0.65) return 'orange';
                  else if (cellVol > maxCellVol - 0.3) return 'orange';
                  else return 'lightgreen';
                ]]]
          card:
            - font-size: 12px
      - type: custom:button-card
        name: Min Cell Voltage
        size: 15%
        entity: sensor.seplos_bms_pack_0_min_cell_voltage
        show_icon: true
        show_name: true
        show_state: true
        show_label: false
        styles:
          icon:
            - color: grey
          card:
            - font-size: 12px
      - type: custom:button-card
        name: Max Cell Voltage
        size: 15%
        entity: sensor.seplos_bms_pack_0_max_cell_voltage
        show_icon: true
        show_name: true
        show_state: true
        show_label: false
        styles:
          icon:
            - color: grey
          card:
            - font-size: 12px
  - type: custom:plotly-graph
    entities:
      - entity: sensor.seplos_bms_pack_0_average_cell_voltage
        name: Average Cell
      - entity: sensor.seplos_bms_pack_0_state_of_charge
        name: SoC
      - entity: sensor.seplos_bms_pack_0_dis_charge_current
        name: Dis-/Charge
      - entity: sensor.seplos_bms_pack_0_total_pack_voltage
        name: Pack
      - entity: sensor.seplos_bms_pack_0_port_voltage
        name: Port
    hours_to_show: 24
    refresh_interval: 10
  - type: custom:plotly-graph
    entities:
      - entity: sensor.seplos_bms_pack_0_cell_temperature_1
        name: Cells 1
      - entity: sensor.seplos_bms_pack_0_cell_temperature_2
        name: Cells 2
      - entity: sensor.seplos_bms_pack_0_cell_temperature_3
        name: Cells 3
      - entity: sensor.seplos_bms_pack_0_cell_temperature_4
        name: Cells 4
      - entity: sensor.seplos_bms_pack_0_ambient_temperature
        name: Ambient
      - entity: sensor.seplos_bms_pack_0_components_temperature
        name: Components
    hours_to_show: 24
    refresh_interval: 10